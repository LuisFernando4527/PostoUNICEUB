// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostoCeub.Data.Entities;

#nullable disable

namespace PostoUNICEUB.Data.Migrations
{
    [DbContext(typeof(PostoCeubDbContext))]
    [Migration("20240924190855_MedicoEnfermeiroAtt")]
    partial class MedicoEnfermeiroAtt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Enfermeiro", b =>
                {
                    b.Property<int>("idEnfermeiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEnfermeiro"));

                    b.Property<string>("cre")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idEnfermeiro");

                    b.HasIndex("idUsuario");

                    b.ToTable("Enfermeiro");
                });

            modelBuilder.Entity("Medico", b =>
                {
                    b.Property<int>("idMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMedico"));

                    b.Property<string>("crm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idMedico");

                    b.HasIndex("idUsuario");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("edEmail")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nmTelefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("nmUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Enfermeiro", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Medico", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
